/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DAOProposer, DAOProposerInterface } from "../DAOProposer";

const _abi = [
  {
    inputs: [],
    name: "daoGovernor",
    outputs: [
      {
        internalType: "contract IProposalReceiver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProposalContent",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalContents",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalIDs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IProposalReceiver",
        name: "_governor",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610dd7806100256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637d5e81e21161005b5780637d5e81e2146100f9578063a007b1971461011a578063c42cf5351461013a578063da35c6641461014f57600080fd5b80631de20bcf1461008257806330f9aac4146100ae5780634ed27034146100d9575b600080fd5b61009561009036600461077b565b610158565b6040516100a59493929190610832565b60405180910390f35b6000546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020016100a5565b6100ec6100e736600461077b565b610396565b6040516100a591906108de565b61010c610107366004610af0565b610438565b6040519081526020016100a5565b61010c61012836600461077b565b60026020526000908152604090205481565b61014d610148366004610bfb565b610575565b005b61010c60015481565b60008181526003602081815260409283902080548451818402810184019095528085526060948594859485949360018501936002860193860192909186918301828280156101cf57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101b1575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561022157602002820191906000526020600020905b81548152602001906001019080831161020d575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156102f557838290600052602060002001805461026890610c18565b80601f016020809104026020016040519081016040528092919081815260200182805461029490610c18565b80156102e15780601f106102b6576101008083540402835291602001916102e1565b820191906000526020600020905b8154815290600101906020018083116102c457829003601f168201915b505050505081526020019060010190610249565b50505050915080805461030790610c18565b80601f016020809104026020016040519081016040528092919081815260200182805461033390610c18565b80156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b5050505050905093509350935093509193509193565b600360208190526000918252604090912090810180546103b590610c18565b80601f01602080910402602001604051908101604052809291908181526020018280546103e190610c18565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050905081565b60008054604051633eaf40f160e11b815282916001600160a01b031690637d5e81e29061046f908990899089908990600401610832565b6020604051808303816000875af115801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b29190610c52565b600154600090815260026020908152604080832084905580516080810182528a81528083018a905280820189905260608101889052848452600383529220825180519495509293909261050992849291019061061a565b506020828101518051610522926001850192019061067f565b506040820151805161053e9160028401916020909101906106ba565b50606082015160038201906105539082610cba565b5050600180549150600061056683610d7a565b90915550909695505050505050565b6000546001600160a01b0316156105f85760405162461bcd60e51b815260206004820152603860248201527f44414f50726f706f7365723a2044414f20676f7665726e6f722061646472657360448201527f7320697320616c726561647920696e697469616c697a65640000000000000000606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b82805482825590600052602060002090810192821561066f579160200282015b8281111561066f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061063a565b5061067b92915061070c565b5090565b82805482825590600052602060002090810192821561066f579160200282015b8281111561066f57825182559160200191906001019061069f565b828054828255906000526020600020908101928215610700579160200282015b8281111561070057825182906106f09082610cba565b50916020019190600101906106da565b5061067b929150610721565b5b8082111561067b576000815560010161070d565b8082111561067b576000610735828261073e565b50600101610721565b50805461074a90610c18565b6000825580601f1061075a575050565b601f016020900490600052602060002090810190610778919061070c565b50565b60006020828403121561078d57600080fd5b5035919050565b6000815180845260005b818110156107ba5760208185018101518683018201520161079e565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b8481101561082557601f19868403018952610813838351610794565b988401989250908301906001016107f7565b5090979650505050505050565b6080808252855190820181905260009060209060a0840190828901845b828110156108745781516001600160a01b03168452928401929084019060010161084f565b5050508381038285015286518082528783019183019060005b818110156108a95783518352928401929184019160010161088d565b505084810360408601526108bd81886107da565b9250505082810360608401526108d38185610794565b979650505050505050565b6020815260006108f16020830184610794565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610937576109376108f8565b604052919050565b600067ffffffffffffffff821115610959576109596108f8565b5060051b60200190565b6001600160a01b038116811461077857600080fd5b600082601f83011261098957600080fd5b8135602061099e6109998361093f565b61090e565b82815260059290921b840181019181810190868411156109bd57600080fd5b8286015b848110156109d857803583529183019183016109c1565b509695505050505050565b600067ffffffffffffffff8311156109fd576109fd6108f8565b610a10601f8401601f191660200161090e565b9050828152838383011115610a2457600080fd5b828260208301376000602084830101529392505050565b600082601f830112610a4c57600080fd5b81356020610a5c6109998361093f565b82815260059290921b84018101918181019086841115610a7b57600080fd5b8286015b848110156109d857803567ffffffffffffffff811115610a9f5760008081fd5b8701603f81018913610ab15760008081fd5b610ac28986830135604084016109e3565b845250918301918301610a7f565b600082601f830112610ae157600080fd5b6108f1838335602085016109e3565b60008060008060808587031215610b0657600080fd5b843567ffffffffffffffff80821115610b1e57600080fd5b818701915087601f830112610b3257600080fd5b81356020610b426109998361093f565b82815260059290921b8401810191818101908b841115610b6157600080fd5b948201945b83861015610b88578535610b7981610963565b82529482019490820190610b66565b98505088013592505080821115610b9e57600080fd5b610baa88838901610978565b94506040870135915080821115610bc057600080fd5b610bcc88838901610a3b565b93506060870135915080821115610be257600080fd5b50610bef87828801610ad0565b91505092959194509250565b600060208284031215610c0d57600080fd5b81356108f181610963565b600181811c90821680610c2c57607f821691505b602082108103610c4c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610c6457600080fd5b5051919050565b601f821115610cb557600081815260208120601f850160051c81016020861015610c925750805b601f850160051c820191505b81811015610cb157828155600101610c9e565b5050505b505050565b815167ffffffffffffffff811115610cd457610cd46108f8565b610ce881610ce28454610c18565b84610c6b565b602080601f831160018114610d1d5760008415610d055750858301515b600019600386901b1c1916600185901b178555610cb1565b600085815260208120601f198616915b82811015610d4c57888601518255948401946001909101908401610d2d565b5085821015610d6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201610d9a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122063a72c2c129aaa39fb5d8143f375bf76ea3154fa494348233803c6de182606f364736f6c63430008110033";

type DAOProposerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOProposerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOProposer__factory extends ContractFactory {
  constructor(...args: DAOProposerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOProposer> {
    return super.deploy(overrides || {}) as Promise<DAOProposer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOProposer {
    return super.attach(address) as DAOProposer;
  }
  override connect(signer: Signer): DAOProposer__factory {
    return super.connect(signer) as DAOProposer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOProposerInterface {
    return new utils.Interface(_abi) as DAOProposerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOProposer {
    return new Contract(address, _abi, signerOrProvider) as DAOProposer;
  }
}
