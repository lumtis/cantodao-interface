/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DAOProposer, DAOProposerInterface } from "../DAOProposer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mininalVotingPower",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "daoGovernor",
    outputs: [
      {
        internalType: "contract IProposalReceiver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProposalContent",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProposalCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalVotingPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalContents",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalIDs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IProposalReceiver",
        name: "_governor",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mininalVotingPower",
        type: "uint256",
      },
    ],
    name: "setMinimalVotingPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600155600060025534801561001a57600080fd5b506040516110f63803806110f683398101604081905261003991610041565b60015561005a565b60006020828403121561005357600080fd5b5051919050565b61108d806100696000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637d5e81e2116100715780637d5e81e214610151578063a007b19714610164578063ac78961b14610184578063c42cf535146101ad578063da35c664146101c0578063ff05d7fd146101c957600080fd5b80631de20bcf146100ae57806330f9aac4146100da5780634e90d915146101055780634ed270341461011a57806364ac17071461013a575b600080fd5b6100c16100bc366004610a14565b6101f2565b6040516100d19493929190610acb565b60405180910390f35b6000546100ed906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b610118610113366004610a14565b610433565b005b61012d610128366004610a14565b610497565b6040516100d19190610b77565b61014360015481565b6040519081526020016100d1565b61014361015f366004610d89565b610537565b610143610172366004610a14565b60036020526000908152604090205481565b6100ed610192366004610a14565b6005602052600090815260409020546001600160a01b031681565b6101186101bb366004610e94565b610812565b61014360025481565b6100ed6101d7366004610a14565b6000908152600560205260409020546001600160a01b031690565b600081815260046020908152604091829020805483518184028101840190945280845260609384938493849390926001840192600285019260038601929186919083018282801561026c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161024e575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156102be57602002820191906000526020600020905b8154815260200190600101908083116102aa575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561039257838290600052602060002001805461030590610eb1565b80601f016020809104026020016040519081016040528092919081815260200182805461033190610eb1565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050815260200190600101906102e6565b5050505091508080546103a490610eb1565b80601f01602080910402602001604051908101604052809291908181526020018280546103d090610eb1565b801561041d5780601f106103f25761010080835404028352916020019161041d565b820191906000526020600020905b81548152906001019060200180831161040057829003601f168201915b5050505050905093509350935093509193509193565b6000546001600160a01b031633146104925760405162461bcd60e51b815260206004820152601e60248201527f4d7573742062652063616c6c65642062792044414f20676f7665726e6f72000060448201526064015b60405180910390fd5b600155565b60046020526000908152604090206003810180546104b490610eb1565b80601f01602080910402602001604051908101604052809291908181526020018280546104e090610eb1565b801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b5050505050905081565b600080546001600160a01b03166105875760405162461bcd60e51b8152602060048201526014602482015273111053c819dbdd995c9b9bdc881b9bdd081cd95d60621b6044820152606401610489565b60015460008054906101000a90046001600160a01b03166001600160a01b03166352fda8886040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190610eeb565b6040516309ab24eb60e41b81523360048201526001600160a01b039190911690639ab24eb090602401602060405180830381865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190610f08565b10156106b75760405162461bcd60e51b815260206004820181905260248201527f4d696e696d616c20766f746520726571756972656d656e74206e6f74206d65746044820152606401610489565b60008054604051633eaf40f160e11b81526001600160a01b0390911690637d5e81e2906106ee908990899089908990600401610acb565b6020604051808303816000875af115801561070d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107319190610f08565b600254600090815260036020908152604080832084905580516080810182528a81528083018a90528082018990526060810188905284845260048352922082518051949550929390926107889284929101906108b3565b5060208281015180516107a19260018501920190610918565b50604082015180516107bd916002840191602090910190610953565b50606082015160038201906107d29082610f70565b505060028054915060006107e583611030565b9091555050600081815260056020526040902080546001600160a01b031916331790559050949350505050565b6000546001600160a01b0316156108915760405162461bcd60e51b815260206004820152603860248201527f44414f50726f706f7365723a2044414f20676f7665726e6f722061646472657360448201527f7320697320616c726561647920696e697469616c697a656400000000000000006064820152608401610489565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054828255906000526020600020908101928215610908579160200282015b8281111561090857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906108d3565b506109149291506109a5565b5090565b828054828255906000526020600020908101928215610908579160200282015b82811115610908578251825591602001919060010190610938565b828054828255906000526020600020908101928215610999579160200282015b8281111561099957825182906109899082610f70565b5091602001919060010190610973565b506109149291506109ba565b5b8082111561091457600081556001016109a6565b808211156109145760006109ce82826109d7565b506001016109ba565b5080546109e390610eb1565b6000825580601f106109f3575050565b601f016020900490600052602060002090810190610a1191906109a5565b50565b600060208284031215610a2657600080fd5b5035919050565b6000815180845260005b81811015610a5357602081850181015186830182015201610a37565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b84811015610abe57601f19868403018952610aac838351610a2d565b98840198925090830190600101610a90565b5090979650505050505050565b6080808252855190820181905260009060209060a0840190828901845b82811015610b0d5781516001600160a01b031684529284019290840190600101610ae8565b5050508381038285015286518082528783019183019060005b81811015610b4257835183529284019291840191600101610b26565b50508481036040860152610b568188610a73565b925050508281036060840152610b6c8185610a2d565b979650505050505050565b602081526000610b8a6020830184610a2d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bd057610bd0610b91565b604052919050565b600067ffffffffffffffff821115610bf257610bf2610b91565b5060051b60200190565b6001600160a01b0381168114610a1157600080fd5b600082601f830112610c2257600080fd5b81356020610c37610c3283610bd8565b610ba7565b82815260059290921b84018101918181019086841115610c5657600080fd5b8286015b84811015610c715780358352918301918301610c5a565b509695505050505050565b600067ffffffffffffffff831115610c9657610c96610b91565b610ca9601f8401601f1916602001610ba7565b9050828152838383011115610cbd57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610ce557600080fd5b81356020610cf5610c3283610bd8565b82815260059290921b84018101918181019086841115610d1457600080fd5b8286015b84811015610c7157803567ffffffffffffffff811115610d385760008081fd5b8701603f81018913610d4a5760008081fd5b610d5b898683013560408401610c7c565b845250918301918301610d18565b600082601f830112610d7a57600080fd5b610b8a83833560208501610c7c565b60008060008060808587031215610d9f57600080fd5b843567ffffffffffffffff80821115610db757600080fd5b818701915087601f830112610dcb57600080fd5b81356020610ddb610c3283610bd8565b82815260059290921b8401810191818101908b841115610dfa57600080fd5b948201945b83861015610e21578535610e1281610bfc565b82529482019490820190610dff565b98505088013592505080821115610e3757600080fd5b610e4388838901610c11565b94506040870135915080821115610e5957600080fd5b610e6588838901610cd4565b93506060870135915080821115610e7b57600080fd5b50610e8887828801610d69565b91505092959194509250565b600060208284031215610ea657600080fd5b8135610b8a81610bfc565b600181811c90821680610ec557607f821691505b602082108103610ee557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610efd57600080fd5b8151610b8a81610bfc565b600060208284031215610f1a57600080fd5b5051919050565b601f821115610f6b57600081815260208120601f850160051c81016020861015610f485750805b601f850160051c820191505b81811015610f6757828155600101610f54565b5050505b505050565b815167ffffffffffffffff811115610f8a57610f8a610b91565b610f9e81610f988454610eb1565b84610f21565b602080601f831160018114610fd35760008415610fbb5750858301515b600019600386901b1c1916600185901b178555610f67565b600085815260208120601f198616915b8281101561100257888601518255948401946001909101908401610fe3565b50858210156110205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161105057634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122014b99bac2d5f25c51e19840aa44ed1ff02f4c1c4c9c30d23f8693ea1d5d2819464736f6c63430008110033";

type DAOProposerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOProposerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOProposer__factory extends ContractFactory {
  constructor(...args: DAOProposerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mininalVotingPower: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOProposer> {
    return super.deploy(
      _mininalVotingPower,
      overrides || {}
    ) as Promise<DAOProposer>;
  }
  override getDeployTransaction(
    _mininalVotingPower: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mininalVotingPower, overrides || {});
  }
  override attach(address: string): DAOProposer {
    return super.attach(address) as DAOProposer;
  }
  override connect(signer: Signer): DAOProposer__factory {
    return super.connect(signer) as DAOProposer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOProposerInterface {
    return new utils.Interface(_abi) as DAOProposerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOProposer {
    return new Contract(address, _abi, signerOrProvider) as DAOProposer;
  }
}
