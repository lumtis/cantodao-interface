/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DAOToken, DAOTokenInterface } from "../DAOToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_fundedAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002927380380620029278339810160408190526200003591620007fa565b6040805180820190915260018152603160f81b602082015284908190818660036200006183826200091b565b5060046200007082826200091b565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200010f90503362000125565b6200011b828262000177565b5050505062000a29565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200018e82826200019260201b62000b3a1760201c565b5050565b620001a982826200024960201b62000bca1760201c565b6001600160e01b03620001bd620003168216565b11156200022a5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b62000243600962000c956200031c60201b178362000333565b50505050565b6001600160a01b038216620002a15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000221565b8060026000828254620002b59190620009fd565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200018e60008383620004ca565b60025490565b60006200032a8284620009fd565b90505b92915050565b82546000908190818115620003935762000362876200035460018562000a13565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152620003a8565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350620003c684868860201c565b9250600082118015620003df5750805163ffffffff1643145b156200043657620003fb83620004e260201b62000ca11760201c565b6200040d886200035460018662000a13565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055620004bb565b86604051806040016040528062000458436200055160201b62000d0e1760201c565b63ffffffff1681526020016200047986620004e260201b62000ca11760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b620004c5838383620005b860201b62000d731760201c565b60006001600160e01b038211156200054d5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000221565b5090565b600063ffffffff8211156200054d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000221565b620005d0838383620004c560201b62000da51760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620004c5929182169116838183148015906200060f5750600081115b15620004c5576001600160a01b038316156200069c576001600160a01b03831660009081526008602090815260408220829162000659919062000727901b62000daa178562000333565b91509150846001600160a01b031660008051602062002907833981519152838360405162000691929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620004c5576001600160a01b038216600090815260086020908152604082208291620006e091906200031c901b62000c95178562000333565b91509150836001600160a01b031660008051602062002907833981519152838360405162000718929190918252602082015260400190565b60405180910390a25050505050565b60006200032a828462000a13565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200075d57600080fd5b81516001600160401b03808211156200077a576200077a62000735565b604051601f8301601f19908116603f01168101908282118183101715620007a557620007a562000735565b81604052838152602092508683858801011115620007c257600080fd5b600091505b83821015620007e65785820183015181830184015290820190620007c7565b600093810190920192909252949350505050565b600080600080608085870312156200081157600080fd5b84516001600160401b03808211156200082957600080fd5b62000837888389016200074b565b955060208701519150808211156200084e57600080fd5b506200085d878288016200074b565b604087015190945090506001600160a01b03811681146200087d57600080fd5b6060959095015193969295505050565b600181811c90821680620008a257607f821691505b602082108103620008c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c557600081815260208120601f850160051c81016020861015620008f25750805b601f850160051c820191505b818110156200091357828155600101620008fe565b505050505050565b81516001600160401b0381111562000937576200093762000735565b6200094f816200094884546200088d565b84620008c9565b602080601f8311600181146200098757600084156200096e5750858301515b600019600386901b1c1916600185901b17855562000913565b600085815260208120601f198616915b82811015620009b85788860151825594840194600190910190840162000997565b5085821015620009d75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808201808211156200032d576200032d620009e7565b818103818111156200032d576200032d620009e7565b60805160a05160c05160e0516101005161012051611e8e62000a796000396000611182015260006111d1015260006111ac015260006111050152600061112f015260006111590152611e8e6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80637ecebe00116100de578063a457c2d711610097578063d505accf11610071578063d505accf14610386578063dd62ed3e14610399578063f1127ed8146103ac578063f2fde38b146103e957600080fd5b8063a457c2d71461034d578063a9059cbb14610360578063c3cda5201461037357600080fd5b80637ecebe00146102e85780638da5cb5b146102fb5780638e539e8c1461030c57806395d89b411461031f5780639ab24eb014610327578063a0712d681461033a57600080fd5b8063395093511161014b5780635c19a95c116101255780635c19a95c1461027a5780636fcfff451461028f57806370a08231146102b7578063715018a6146102e057600080fd5b806339509351146102105780633a46b1a814610223578063587cde1e1461023657600080fd5b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101d457806323b872dd146101e6578063313ce567146101f95780633644e51514610208575b600080fd5b61019b6103fc565b6040516101a89190611b3a565b60405180910390f35b6101c46101bf366004611ba4565b61048e565b60405190151581526020016101a8565b6002545b6040519081526020016101a8565b6101c46101f4366004611bce565b6104a8565b604051601281526020016101a8565b6101d86104cc565b6101c461021e366004611ba4565b6104db565b6101d8610231366004611ba4565b6104fd565b610262610244366004611c0a565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b0390911681526020016101a8565b61028d610288366004611c0a565b61057c565b005b6102a261029d366004611c0a565b610589565b60405163ffffffff90911681526020016101a8565b6101d86102c5366004611c0a565b6001600160a01b031660009081526020819052604090205490565b61028d6105ab565b6101d86102f6366004611c0a565b6105bf565b600a546001600160a01b0316610262565b6101d861031a366004611c25565b6105dd565b61019b610639565b6101d8610335366004611c0a565b610648565b61028d610348366004611c25565b6106cf565b6101c461035b366004611ba4565b6106f2565b6101c461036e366004611ba4565b61076d565b61028d610381366004611c4f565b61077b565b61028d610394366004611ca7565b6108b1565b6101d86103a7366004611d11565b610a15565b6103bf6103ba366004611d44565b610a40565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101a8565b61028d6103f7366004611c0a565b610ac4565b60606003805461040b90611d84565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611d84565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b60003361049c818585610db6565b60019150505b92915050565b6000336104b6858285610eda565b6104c1858585610f4e565b506001949350505050565b60006104d66110f8565b905090565b60003361049c8185856104ee8383610a15565b6104f89190611dce565b610db6565b60004382106105535760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610575908361121f565b9392505050565b6105863382611316565b50565b6001600160a01b0381166000908152600860205260408120546104a290610d0e565b6105b361138f565b6105bd60006113e9565b565b6001600160a01b0381166000908152600560205260408120546104a2565b600043821061062e5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161054a565b6104a260098361121f565b60606004805461040b90611d84565b6001600160a01b03811660009081526008602052604081205480156106bc576001600160a01b038316600090815260086020526040902061068a600183611de1565b8154811061069a5761069a611df4565b60009182526020909120015464010000000090046001600160e01b03166106bf565b60005b6001600160e01b03169392505050565b6106d761138f565b6105866106ec600a546001600160a01b031690565b8261143b565b600033816107008286610a15565b9050838110156107605760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161054a565b6104c18286868403610db6565b60003361049c818585610f4e565b834211156107cb5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161054a565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906108459061083d9060a00160405160208183030381529060405280519060200120611445565b858585611493565b9050610850816114bb565b861461089e5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161054a565b6108a88188611316565b50505050505050565b834211156109015760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161054a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109308c6114bb565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061098b82611445565b9050600061099b82878787611493565b9050896001600160a01b0316816001600160a01b0316146109fe5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161054a565b610a098a8a8a610db6565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610a8457610a84611df4565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610acc61138f565b6001600160a01b038116610b315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054a565b610586816113e9565b610b448282610bca565b6002546001600160e01b031015610bb65760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161054a565b610bc46009610c95836114e3565b50505050565b6001600160a01b038216610c205760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161054a565b8060026000828254610c329190611dce565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c9160008383611637565b5050565b60006105758284611dce565b60006001600160e01b03821115610d0a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161054a565b5090565b600063ffffffff821115610d0a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161054a565b6001600160a01b03838116600090815260076020526040808220548584168352912054610da592918216911683611642565b505050565b60006105758284611de1565b6001600160a01b038316610e185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161054a565b6001600160a01b038216610e795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161054a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ee68484610a15565b90506000198114610bc45781811015610f415760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161054a565b610bc48484848403610db6565b6001600160a01b038316610fb25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161054a565b6001600160a01b0382166110145760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161054a565b6001600160a01b0383166000908152602081905260409020548181101561108c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161054a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610bc4848484611637565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561115157507f000000000000000000000000000000000000000000000000000000000000000046145b1561117b57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b81546000908181600581111561127957600061123a8461177f565b6112449085611de1565b600088815260209020909150869082015463ffffffff16111561126957809150611277565b611274816001611dce565b92505b505b808210156112c657600061128d8383611867565b600088815260209020909150869082015463ffffffff1611156112b2578091506112c0565b6112bd816001611dce565b92505b50611279565b8015611300576112e9866112db600184611de1565b600091825260209091200190565b5464010000000090046001600160e01b0316611303565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610bc4828483611642565b600a546001600160a01b031633146105bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054a565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c918282610b3a565b60006104a26114526110f8565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114a487878787611882565b915091506114b181611946565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b8254600090819081811561153057611500876112db600185611de1565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611545565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061156584868863ffffffff16565b925060008211801561157d5750805163ffffffff1643145b156115c25761158b83610ca1565b61159a886112db600186611de1565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905561162d565b8660405180604001604052806115d743610d0e565b63ffffffff1681526020016115eb86610ca1565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b610da5838383610d73565b816001600160a01b0316836001600160a01b0316141580156116645750600081115b15610da5576001600160a01b038316156116f2576001600160a01b0383166000908152600860205260408120819061169f90610daa856114e3565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516116e7929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610da5576001600160a01b0382166000908152600860205260408120819061172890610c95856114e3565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611770929190918252602082015260400190565b60405180910390a25050505050565b60008160000361179157506000919050565b6000600161179e84611a90565b901c6001901b905060018184816117b7576117b7611e0a565b048201901c905060018184816117cf576117cf611e0a565b048201901c905060018184816117e7576117e7611e0a565b048201901c905060018184816117ff576117ff611e0a565b048201901c9050600181848161181757611817611e0a565b048201901c9050600181848161182f5761182f611e0a565b048201901c9050600181848161184757611847611e0a565b048201901c90506105758182858161186157611861611e0a565b04611b24565b60006118766002848418611e20565b61057590848416611dce565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118b9575060009050600361193d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561190d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119365760006001925092505061193d565b9150600090505b94509492505050565b600081600481111561195a5761195a611e42565b036119625750565b600181600481111561197657611976611e42565b036119c35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161054a565b60028160048111156119d7576119d7611e42565b03611a245760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161054a565b6003816004811115611a3857611a38611e42565b036105865760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161054a565b600080608083901c15611aa557608092831c92015b604083901c15611ab757604092831c92015b602083901c15611ac957602092831c92015b601083901c15611adb57601092831c92015b600883901c15611aed57600892831c92015b600483901c15611aff57600492831c92015b600283901c15611b1157600292831c92015b600183901c156104a25760010192915050565b6000818310611b335781610575565b5090919050565b600060208083528351808285015260005b81811015611b6757858101830151858201604001528201611b4b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611b9f57600080fd5b919050565b60008060408385031215611bb757600080fd5b611bc083611b88565b946020939093013593505050565b600080600060608486031215611be357600080fd5b611bec84611b88565b9250611bfa60208501611b88565b9150604084013590509250925092565b600060208284031215611c1c57600080fd5b61057582611b88565b600060208284031215611c3757600080fd5b5035919050565b803560ff81168114611b9f57600080fd5b60008060008060008060c08789031215611c6857600080fd5b611c7187611b88565b95506020870135945060408701359350611c8d60608801611c3e565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611cc257600080fd5b611ccb88611b88565b9650611cd960208901611b88565b95506040880135945060608801359350611cf560808901611c3e565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611d2457600080fd5b611d2d83611b88565b9150611d3b60208401611b88565b90509250929050565b60008060408385031215611d5757600080fd5b611d6083611b88565b9150602083013563ffffffff81168114611d7957600080fd5b809150509250929050565b600181811c90821680611d9857607f821691505b6020821081036114dd57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104a2576104a2611db8565b818103818111156104a2576104a2611db8565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082611e3d57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220cf38042ba879a9004aef7433aeb77685e247e2ff7a2d8bc32a9fd547fe930bb664736f6c63430008110033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type DAOTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOToken__factory extends ContractFactory {
  constructor(...args: DAOTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _fundedAddress: PromiseOrValue<string>,
    _initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOToken> {
    return super.deploy(
      _name,
      _symbol,
      _fundedAddress,
      _initialSupply,
      overrides || {}
    ) as Promise<DAOToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _fundedAddress: PromiseOrValue<string>,
    _initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _fundedAddress,
      _initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): DAOToken {
    return super.attach(address) as DAOToken;
  }
  override connect(signer: Signer): DAOToken__factory {
    return super.connect(signer) as DAOToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOTokenInterface {
    return new utils.Interface(_abi) as DAOTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOToken {
    return new Contract(address, _abi, signerOrProvider) as DAOToken;
  }
}
