/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DAOFactory, DAOFactoryInterface } from "../DAOFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDAOGovernorDeployer",
        name: "_governorDeployer",
        type: "address",
      },
      {
        internalType: "contract IDAOTokenDeployer",
        name: "_tokenDeployer",
        type: "address",
      },
      {
        internalType: "contract IDAOProposerDeployer",
        name: "_proposerDeployer",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "_turnstile",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "DAOCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct DaoData",
        name: "_data",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "initialSupply",
            type: "uint256",
          },
        ],
        internalType: "struct DaoToken",
        name: "_token",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "quorumFraction",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingPeriod",
            type: "uint256",
          },
        ],
        internalType: "struct DaoParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "createDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "daos",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getDAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDAOCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governorDeployer",
    outputs: [
      {
        internalType: "contract IDAOGovernorDeployer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerDeployer",
    outputs: [
      {
        internalType: "contract IDAOProposerDeployer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDeployer",
    outputs: [
      {
        internalType: "contract IDAOTokenDeployer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610aa3380380610aa383398101604081905261002f91610090565b600080546001600160a01b03199081166001600160a01b0396871617909155600180548216948616949094179093556002805490931691841691909117909155166080526100ef565b6001600160a01b038116811461008d57600080fd5b50565b600080600080608085870312156100a657600080fd5b84516100b181610078565b60208601519094506100c281610078565b60408601519093506100d381610078565b60608601519092506100e481610078565b939692955090935050565b60805161099961010a60003960006102cf01526109996000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635a29426c1161005b5780635a29426c1461010057806369354f3514610113578063ccbbd26014610126578063f143d6941461013957600080fd5b80630e0bdb66146100825780632a2dae0a146100c45780633a479fb8146100ef575b600080fd5b6100956100903660046106d5565b61014c565b604080516001600160a01b03948516815292841660208401529216918101919091526060015b60405180910390f35b6001546100d7906001600160a01b031681565b6040516001600160a01b0390911681526020016100bb565b6003546040519081526020016100bb565b6100d761010e3660046107c0565b6103d1565b6002546100d7906001600160a01b031681565b6100d76101343660046107c0565b610401565b6000546100d7906001600160a01b031681565b600080600080600260009054906101000a90046001600160a01b03166001600160a01b0316633dfd25926040518163ffffffff1660e01b81526004016020604051808303816000875af11580156101a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cb91906107f1565b90506000806101d98861042b565b9150915060006101eb8a8985876104ba565b60405163c42cf53560e01b81526001600160a01b0380831660048301529192509085169063c42cf53590602401600060405180830381600087803b15801561023257600080fd5b505af1158015610246573d6000803e3d6000fd5b505060405163f2fde38b60e01b81526001600160a01b0384811660048301528616925063f2fde38b9150602401600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b50506040516323b872dd60e01b81523060048201526001600160a01b038481166024830152604482018690527f00000000000000000000000000000000000000000000000000000000000000001692506323b872dd9150606401600060405180830381600087803b15801561031557600080fd5b505af1158015610329573d6000803e3d6000fd5b5050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b038581166001600160a01b031990921682179092556040805191825287831660208301529188168183015290513393507f4db6ee38117e611315b34948f609eed3356f7c79be1c2e94a2a636a7e9599cf792509081900360600190a299919850919650945050505050565b6000600382815481106103e6576103e6610815565b6000918252602090912001546001600160a01b031692915050565b6003818154811061041157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001548151602083015160408085015190516318ae4e3160e31b815260009485946001600160a01b039091169363c57271889361046f933391903090600401610871565b60408051808303816000875af115801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b191906108c1565b91509150915091565b6000805485516020808801516040808a01518951938a01518a830151925163fec7a08160e01b81526001600160a01b039097169663fec7a0819661050a969095948c938c939091906004016108ef565b6020604051808303816000875af1158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d91906107f1565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561058f5761058f610556565b60405290565b600082601f8301126105a657600080fd5b813567ffffffffffffffff808211156105c1576105c1610556565b604051601f8301601f19908116603f011681019082821181831017156105e9576105e9610556565b8160405283815286602085880101111561060257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006060828403121561063457600080fd5b61063c61056c565b9050813567ffffffffffffffff8082111561065657600080fd5b61066285838601610595565b8352602084013591508082111561067857600080fd5b5061068584828501610595565b6020830152506040820135604082015292915050565b6000606082840312156106ad57600080fd5b6106b561056c565b905081358152602082013560208201526040820135604082015292915050565b600080600060a084860312156106ea57600080fd5b833567ffffffffffffffff8082111561070257600080fd5b908501906060828803121561071657600080fd5b61071e61056c565b82358281111561072d57600080fd5b61073989828601610595565b82525060208301358281111561074e57600080fd5b61075a89828601610595565b60208301525060408301358281111561077257600080fd5b61077e89828601610595565b6040830152509450602086013591508082111561079a57600080fd5b506107a786828701610622565b9250506107b7856040860161069b565b90509250925092565b6000602082840312156107d257600080fd5b5035919050565b6001600160a01b03811681146107ee57600080fd5b50565b60006020828403121561080357600080fd5b815161080e816107d9565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561085157602081850181015186830182015201610835565b506000602082860101526020601f19601f83011685010191505092915050565b60a08152600061088460a083018861082b565b8281036020840152610896818861082b565b6001600160a01b03968716604085015260608401959095525050921660809092019190915292915050565b600080604083850312156108d457600080fd5b82516108df816107d9565b6020939093015192949293505050565b60006101008083526109038184018c61082b565b90508281036020840152610917818b61082b565b9050828103604084015261092b818a61082b565b6001600160a01b0398891660608501529690971660808301525060a081019390935260c083019190915260e09091015294935050505056fea26469706673582212208bbbbdecff8e9a219c836b40b2757695bff56de9d9e11727abf6962b533ee8a364736f6c63430008110033";

type DAOFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOFactory__factory extends ContractFactory {
  constructor(...args: DAOFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _governorDeployer: PromiseOrValue<string>,
    _tokenDeployer: PromiseOrValue<string>,
    _proposerDeployer: PromiseOrValue<string>,
    _turnstile: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOFactory> {
    return super.deploy(
      _governorDeployer,
      _tokenDeployer,
      _proposerDeployer,
      _turnstile,
      overrides || {}
    ) as Promise<DAOFactory>;
  }
  override getDeployTransaction(
    _governorDeployer: PromiseOrValue<string>,
    _tokenDeployer: PromiseOrValue<string>,
    _proposerDeployer: PromiseOrValue<string>,
    _turnstile: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governorDeployer,
      _tokenDeployer,
      _proposerDeployer,
      _turnstile,
      overrides || {}
    );
  }
  override attach(address: string): DAOFactory {
    return super.attach(address) as DAOFactory;
  }
  override connect(signer: Signer): DAOFactory__factory {
    return super.connect(signer) as DAOFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOFactoryInterface {
    return new utils.Interface(_abi) as DAOFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOFactory {
    return new Contract(address, _abi, signerOrProvider) as DAOFactory;
  }
}
